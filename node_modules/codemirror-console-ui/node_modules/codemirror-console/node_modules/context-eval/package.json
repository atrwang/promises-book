{
  "name": "context-eval",
  "version": "0.0.2",
  "description": "JavaScript code execution context for the browser and wrapper around node vm module",
  "main": "index.js",
  "scripts": {
    "test": "mocha tests/"
  },
  "keywords": [
    "context",
    "vm",
    "eval",
    "iframe"
  ],
  "author": {
    "name": "amasad"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.16.2",
    "karma-script-launcher": "~0.1.0",
    "karma-chrome-launcher": "~0.1.2",
    "karma-firefox-launcher": "~0.1.3",
    "karma-html2js-preprocessor": "~0.1.0",
    "karma-jasmine": "~0.1.5",
    "karma-coffee-preprocessor": "~0.1.2",
    "karma-phantomjs-launcher": "~0.1.1",
    "karma": "~0.10.8",
    "karma-mocha": "~0.1.1",
    "karma-safari-launcher": "~0.1.1",
    "karma-browserify": "0.0.6"
  },
  "readme": "# context-eval\n\nSimple execution context for node and the browser. In node it just creates a new\ncontext and `runInContext` in that context and in the browser it creates an\niframe and hangs on to it until destroy is called.\n\ninstall:\n\n    npm install context-eval\n\nUse with browserify or node.\n\nto run the tests:\n\n    npm test\n\ntest in browsers:\n\n    npm install karma -g\n    karma start\n\n\n## new Context(sandbox, parentElement)\n\n`sandbox` (optional) is an object that would be shallowly copied into the execution context.\n`parentElement` (optional) is an element where the iframe can appended to, defautls to `body`.\n\n## Context#evaluate(code)\n\nEvaluates code and returns result.\n\n## Context#destroy()\n\nDoes nothing in node but removes iframe in browser.\n\n\n### License\n\nMIT",
  "readmeFilename": "readme.md",
  "_id": "context-eval@0.0.2",
  "_shasum": "93e9d649fd9029d94583b01ed575b06c8128bbb7",
  "_from": "context-eval@0.0.2",
  "_resolved": "https://registry.npmjs.org/context-eval/-/context-eval-0.0.2.tgz"
}
