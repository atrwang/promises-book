{
  "name": "parcel-map",
  "description": "gather asset information from file globs in package.json",
  "version": "1.3.4",
  "author": {
    "name": "Rotunda Software",
    "email": "support@rotundasoftware.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rotundasoftware/parcel-map.git"
  },
  "bugs": {
    "url": "https://github.com/rotundasoftware/parcel-map/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rotundasoftware/parcel-map/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "devDependencies": {
    "browserify": "~3.28.2",
    "tape": "~2.4.2"
  },
  "keywords": [
    "browserify",
    "browserify-plugin",
    "cartero",
    "asset",
    "asset manager",
    "css",
    "javascript",
    "html"
  ],
  "dependencies": {
    "underscore": "~1.6.0",
    "shallow-copy": "~0.0.1",
    "shasum": "~1.0.0",
    "nub": "~0.0.0",
    "glob": "~3.2.8",
    "mothership": "~0.1.0"
  },
  "readme": "# parcel-map\n\ngather asset information from file globs in package.json \n\nYou can use this module to build a static asset pipeline to work alongside\nbrowserify's dependency graph.\n\n[![build status](https://secure.travis-ci.org/rotundasoftware/parcel-map.png)](http://travis-ci.org/rotundasoftware/parcel-map)\n\n# example\n\n``` js\nvar browserify = require('browserify');\nvar parcelMap = require('parcel-map');\n\nvar b = browserify(__dirname + '/views/page1');\nvar opts = {\n    keys: [ 'style' ],\n    defaults: { style: 'images/*.jpg' }\n};\nparcelMap(b, opts, function (err, graph) {\n    console.log(graph);\n});\nb.bundle();\n```\n\nFor a `views/page1` directory with a package.json of:\n\n``` json\n{\n  \"style\": \"*.css\"\n}\n```\n\nand these files:\n\n```\npage1/index.js\npage1/upper.js\npage1/beep.css\npage1/iamges/beep.jpg\n```\n\nThe `index.js` requires two files, the `'upper.js'` in the local directory and\n`'widget'`, a module with a package.json of:\n\n``` json\n{\n  \"style\": \"*.css\"\n}\n```\n\nthe resulting parcel-map output is:\n\n```\n{ packages: \n   { '2a0f0daf500f9de39847f70e6ded76b27543fdc3': \n      { style: '*.css',\n        __dirname: '/home/substack/projects/parcel-map/example/views/page1' },\n     '80f1bf36696fb5ff6602576674c3a2774252a623': \n      { style: '*.css',\n        __dirname: '/home/substack/projects/parcel-map/example/node_modules/widget' } },\n  assets: \n   { '/home/substack/projects/parcel-map/example/views/page1/beep.css': '2a0f0daf500f9de39847f70e6ded76b27543fdc3',\n     '/home/substack/projects/parcel-map/example/views/page1/images/beep.jpg': '2a0f0daf500f9de39847f70e6ded76b27543fdc3',\n     '/home/substack/projects/parcel-map/example/node_modules/widget/style.css': '80f1bf36696fb5ff6602576674c3a2774252a623' },\n  dependencies: \n   { '2a0f0daf500f9de39847f70e6ded76b27543fdc3': [ '80f1bf36696fb5ff6602576674c3a2774252a623' ],\n     '80f1bf36696fb5ff6602576674c3a2774252a623': [] } }\n```\n\nNote how parcel-map found the local css in `page1/beep.css` and the image\n`page1/beep.jpg` from the default `\"images/*.jpg\"` glob.\n\nIt also found the `widget/style.css` from the widget module, because widget was\nincluded from `index.js`, so the lookup rules were triggered and the\npackage.json in `widget/` was processed through the parcel-map rules.\n\nYou can generate this parcel map output with the API directly or you can use\nparcel-map as a\n[browserify-plugin](https://github.com/substack/node-browserify#plugins):\n\n```\n$ browserify -p [ parcel-map -k style -o map.json ] views/page1 > static/bundle.js\n```\n\n# methods\n\n``` js\nvar parcelMap = require('parcel-map');\n```\n\n## parcelMap(bundle, opts, cb)\n\nPass in a browserify `bundle` and some `opts` in order to generate the parcel\nmap and get the result in `cb(err, parcelMap)`.\n\n`parcelMap` is an object with these keys:\n\n* `\"packages\"` maps package IDs to package.json contents.\n* `\"assets\"` maps asset file paths captured from\n[glob expansion](https://npmjs.org/package/glob)\nto the containing package's ID.\n* `\"dependencies\"` maps package IDs to an array of dependency package IDs.\n\nThe `opts` options are:\n\n* `opts.defaults` - an object mapping dotted keypaths into the package.json with\ndefault values to use when there is no field present in the package.json at the\nlocation indicated\n* `opts.keys` - an array of keys, dotted keypath strings, or array keypaths that\ntraverse into the package.json to values that are\n[glob strings](https://npmjs.org/package/glob).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install parcel-map\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "homepage": "https://github.com/rotundasoftware/parcel-map",
  "_id": "parcel-map@1.3.4",
  "_shasum": "8cd2332a19276687fcca8b00b41aa6349187bdc2",
  "_from": "parcel-map@~1.3.1",
  "_resolved": "https://registry.npmjs.org/parcel-map/-/parcel-map-1.3.4.tgz"
}
